---

inputs:
  calling-job-context:
    description: A JSON with the calling job inputs
    type: string
  job-dependencies-context:
    default: >-
      {}
    description: >-
      The `$ {{ needs }}` context passed from the calling workflow
      encoded as a JSON string. The caller is expected to form this
      input as follows:
      `job-dependencies-context: $ {{ toJSON(needs) }}`.
    required: false
    type: string

runs:
  using: composite
  steps:
  - name: Log setting up pre-commit cache
    if: fromJSON(inputs.calling-job-context).toxenv == 'pre-commit'
    run: >-
      >&2 echo Caching ~/.cache/pre-commit based on
      the contents of '.pre-commit-config.yaml'...
    shell: bash
  - name: Cache pre-commit.com virtualenvs
    if: fromJSON(inputs.calling-job-context).toxenv == 'pre-commit'
    uses: actions/cache@v4
    with:
      path: ~/.cache/pre-commit
      key: >-
        ${{
          runner.os
        }}-pre-commit-${{
          hashFiles('.pre-commit-config.yaml')
        }}

  - name: Fetch the GHA artifact with the version patch
    if: fromJSON(inputs.calling-job-context).toxenv == 'build-dists'
    uses: actions/download-artifact@v4
    with:
      name: changelog
  - name: Apply the changelog patch but do not commit it
    if: fromJSON(inputs.calling-job-context).toxenv == 'build-dists'
    run: >-
      git apply '${{
        fromJSON(
          inputs.job-dependencies-context
        ).pre-setup.outputs.changelog-patch-name
      }}'
    shell: bash
  - name: Delete the changelog patch file
    if: fromJSON(inputs.calling-job-context).toxenv == 'build-dists'
    run: >-
      rm -fv '${{
        fromJSON(
          inputs.job-dependencies-context
        ).pre-setup.outputs.changelog-patch-name
      }}'
    shell: bash
  - name: Pretend that changelog updates never happened
    if: fromJSON(inputs.calling-job-context).toxenv == 'build-dists'
    run: |
      git diff --color=always
      git update-index --assume-unchanged $(git ls-files --modified)
    shell: bash

...
